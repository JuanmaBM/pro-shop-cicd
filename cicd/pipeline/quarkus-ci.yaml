apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: quarkus-ci
spec:
  workspaces:
    - name: source
    - name: source-k8s
    - name: scratch
  params:
    - name: url
      description: Git repository url
    - name: branch
      description: Revision to use
    - name: image-name
      description: Image name
    - name: image-url
      description: Container image URL to publish
    - name: repo-k8s-url
      description: Repotitory url which have Kubernetes/OCP descriptors
    - name: repo-k8s-branch
      description: Branch used in the k8s repository
    - name: repo-k8s-deployment-path
      description: Deployment path in k8s repository
    - name: containerfile-path
  tasks:
  - name: clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    params:
      - name: url
        value: $(params.url)
      - name: revision
        value: $(params.branch)
      - name: deleteExisting
        value: 'true'
    workspaces:
      - name: output
        workspace: source

  - name: test
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
      - clone
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-11'
      - name: GOALS
        value: ['clean', 'verify']
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch

  - name: maven-build
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
      - clone
    params:
      - name: MAVEN_IMAGE
        value: 'maven:3-openjdk-11'
      - name: GOALS
        value: ['clean', 'package']
    workspaces:
      - name: source
        workspace: source
      - name: maven-settings
        workspace: scratch

  - name: extract-app-version
    taskRef:
      name: extract-version-pom
    runAfter:
      - test
      - maven-build
    params:
      - name: working-dir
        value: .
    workspaces:
      - name: source
        workspace: source

  # - name: add-commitid-to-version
  #   taskRef:
  #     name: add-commitid-to-version
  #   params:
  #     - name: app-version
        # value: $(tasks.extract-app-version.results.app-version)
  #   runAfter:
  #     - extract-app-version
  #   workspaces:
  #     - name: source
  #       workspace: source

  - name: build
    taskRef:
      name: buildah
      kind: ClusterTask
    runAfter: 
      - extract-app-version
    workspaces:
      - name: source
        workspace: source
    params:
      - name: DOCKERFILE
        value: $(params.containerfile-path)
      - name: IMAGE
        value: $(params.image-url):$(tasks.extract-app-version.results.app-version)
      - name: CONTEXT
        value: .
      - name: TLSVERIFY
        value: 'false'

  - name: clone-k8s
    taskRef:
      name: git-clone
      kind: ClusterTask
    runAfter: 
      - build
    params:
      - name: url
        value: $(params.repo-k8s-url)
      - name: revision
        value: $(params.repo-k8s-branch)
      - name: deleteExisting
        value: 'true'
    workspaces:
      - name: output
        workspace: source-k8s

  - name: update-image
    taskRef:
      name: update-image-k8s
      kind: Task
    runAfter: 
      - clone-k8s
    params:
      - name: deployment-path
        value: $(params.repo-k8s-deployment-path)
      - name: image-version
        value: $(tasks.extract-app-version.results.app-version)
      - name: image-name
        value: $(params.image-name)
      - name: revision
        value: $(params.repo-k8s-branch)
    workspaces:
      - name: source
        workspace: source-k8s